{{> admin-tabs route="schedules" }}

<a href="/admin/schedules" class="btn btn-outline-success mb-3" id="list-mode-link">
  <i class="fa fa-bars" aria-hidden="true"></i> List Mode
</a>

<div id='calendar'></div>

<!-- Add modal -->
<div id="eventModal" class="modal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Schedule Details</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
        </button>
      </div>
      <div class="modal-body">
        <p id="modalContent">
        </p>
      </div>
       <div class="modal-footer">
        <a id="editLink" href="#" class="btn btn-primary">Edit</a>
        <form id="deleteForm"  method="POST" style="display: inline;">
        <input type="hidden" name="_method" value="DELETE">
        <button type="submit" class="btn btn-danger">Delete</button>
        </form>
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const calendarEl = document.getElementById('calendar');
    const eventModal = new bootstrap.Modal(document.getElementById('eventModal'));
  
    
    // Embed the schedule data
    let schedules = {{{ json schedules }}};

    // Generate events data for FullCalendar
    let events = schedules.map(schedule => ({
      id: schedule.id,
      title: `${schedule.User.name} - ${schedule.Shift.name}`,
      start: schedule.date,
      extendedProps: {
        Date: schedule.date,
        User: schedule.User.name,
        Shift: schedule.Shift.name,
        ShiftStartTime: schedule.Shift.startTime,
        ShiftEndTime: schedule.Shift.endTime,
        Edit: schedule.id,
        Delete: schedule.id
      }
    }));

    const calendar = new FullCalendar.Calendar(calendarEl, {
      initialView: 'dayGridMonth',
      firstDay: 1,
      events: events,
      eventClick: function(info) {
        // When an event is clicked, show the modal
        const modalContent = document.getElementById('modalContent');
        const editLink = document.getElementById('editLink');
        const deleteForm = document.getElementById('deleteForm');
        
        modalContent.innerHTML = `
          <p>Date: ${info.event.extendedProps.Date}</p>
          <p>Name: ${info.event.extendedProps.User}</p>
          <p>Shift: ${info.event.extendedProps.Shift}</p>
          <p>Shift Start Time: ${info.event.extendedProps.ShiftStartTime}</p>
          <p>Shift End Time: ${info.event.extendedProps.ShiftEndTime}</p>
        `;
        editLink.href =`/admin/schedules/${info.event.extendedProps.Edit}/edit`
        deleteForm.action = `/admin/schedules/${info.event.extendedProps.Delete}`

        console.log('Delete form action set to:', deleteForm.action);
        eventModal.show();
      },
    dateClick: function(info) {
    // Handle the logic when a date is clicked
    const clickedDate = info.dateStr;
    const existingSchedule = schedules.find(s => s.date === clickedDate);
    
    if (existingSchedule) {
        // If there is already a schedule for that date, redirect to the edit page
        window.location.href = `/admin/schedules/${existingSchedule.id}/edit`;
    } else {
        // If there is no schedule for that date, redirect to the create page
        window.location.href = `/admin/schedules/create?date=${clickedDate}`;
      }
    }
  });

    calendar.render();

    // Handle delete form submission
    const deleteForm = document.getElementById('deleteForm');
    
    deleteForm.addEventListener('submit', function(e) {
      e.preventDefault()
      if (confirm('Are you sure you want to delete this data?')) {
      console.log('Submitting delete form to:', this.action);
      console.log('Form method:', this.method);
      console.log('Form data:', new FormData(this));
      this.submit();
      }
    })
    // Check the URL parameters to see if a delete operation was just performed
    const urlParams = new URLSearchParams(window.location.search);
    if (urlParams.get('action') === 'delete') {
      alert('Schedule successfully deleted.');
       // Remove the URL parameters
      window.history.replaceState({}, document.title, window.location.pathname);
    }
  });
</script>

 <style>
  #calendar {
    max-width: 100%;
    margin: 0 auto;
  }

  .fc-event {
    text-align: center;
    cursor: pointer;
    border-radius: 0.5rem; 
  }
  .fc-event:hover {
    opacity: 0.8;
  }
  .modal-title {
    font-size: 1.25rem;
    color: #343a40;
  }
  .modal-content {
    border-radius: 0.5rem; 
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); 
    padding: 1.5rem; 
  }
  .modal-footer {
    border-top: 1px solid #e9ecef; 
    padding-top: 1rem; 
  }
</style>